" vim: et sw=4 ts=4
execute pathogen#infect()

" Needed to show 256 colors when in tmux
" http://bentomas.com/2012-03-28/256-colors-in-tmux.html
set t_Co=256

let powerline_font = ($POWERLINE_FONT == '1' && !has('gui_running'))

" configure airline
let g:airline_powerline_fonts = powerline_font
let g:airline#extensions#tabline#enabled = 1
let g:airline#extensions#tabline#show_buffers = 0
let g:airline#extensions#tabline#tab_min_count = 2

" configure tmuxline
let g:tmuxline_powerline_separators = powerline_font
let g:tmuxline_preset = {
    \'a'       : '#S',
    \'win'     : ['#I', '#W#F'],
    \'cwin'    : ['#I', '#W#F'],
    \'y'       : ['%Y-%m-%d', '%I:%M %P'],
    \'z'       : '#H',
    \'options' : {'status-justify' : 'left'}}
" NOTE: if the tmuxline preset is changed, run TmuxlineSnapshot to update
" ~/dotfiles/misc/tmux-tmuxline.conf.symlink

" configure tmux navigator
let g:tmux_navigator_no_mappings = 1
nnoremap <silent> <c-a>h :TmuxNavigateLeft<cr>
nnoremap <silent> <c-a>j :TmuxNavigateDown<cr>
nnoremap <silent> <c-a>k :TmuxNavigateUp<cr>
nnoremap <silent> <c-a>l :TmuxNavigateRight<cr>
nnoremap <silent> <c-a><c-h> :TmuxNavigateLeft<cr>
nnoremap <silent> <c-a><c-j> :TmuxNavigateDown<cr>
nnoremap <silent> <c-a><c-k> :TmuxNavigateUp<cr>
nnoremap <silent> <c-a><c-l> :TmuxNavigateRight<cr>

" configure colorscheme
set background=dark
colorscheme solarized

if has('gui_running')
    set guioptions-=m " remove menu bar
    set guioptions-=T " remove toolbar
    set guioptions-=r " remove right-hand scroll bar
    set guioptions-=L " remove left-hand scroll bar
    set guioptions-=e " use text-based tabs instead of GUI tabs
    set guioptions-=c " use console dialogs instead of GUI popup dialogs

    " toggle menu bar with <c-f1>
    nnoremap <C-F1> :if &go=~#'m'<Bar>set go-=m<Bar>else<Bar>set go+=m<Bar>endif<CR>

    " set font
    if has("gui_gtk2")
        set guifont=Literation\ Mono\ Powerline\ 10
    elseif has('win32')
        set guifont=Consolas:h10:cANSI
    " elseif has("x11")
    "     set guifont=-*-courier-medium-r-normal-*-*-180-*-*-m-*-*
    " else
    "     set guifont=Courier_New:h11:cDEFAULT
    endif
endif

set tabstop=4
set shiftwidth=4

" if we have a mouse, use it
if has('mouse')
    set mouse=a
endif

" yank to system clipboard by default
if has('unnamedplus')
    set clipboard=unnamedplus,exclude:cons\|linux
endif

" allow edited files to be put in the background
set hidden

" make tab characters visible
set list

" turn on number and relativenumber
set number
set relativenumber

" search settings
set incsearch
set hlsearch
set ignorecase
set smartcase

" turn on modeline
set modeline

" use very nomagic by default
nnoremap / /\V
vnoremap / /\V
nnoremap ? ?\V
vnoremap ? ?\V

" keep search pattern at the center of the screen
nnoremap <silent> n nzz
nnoremap <silent> N Nzz
nnoremap <silent> * *zz
nnoremap <silent> # #zz
nnoremap <silent> g* g*zz
nnoremap <silent> g# g#zz

" make Y work like other capitals
nnoremap Y y$

" turn on folding using syntax
set foldmethod=syntax

" turn off intro screen
set shortmess+=I

" configure taglist
if has('win32')
    " let taglist find the ctags executable
    let Tlist_Ctags_Cmd = 'C:\Users\soconnel\Applications\ctags58\ctags.exe'
    let g:ctrlp_buftag_ctags_bin = 'C:\Users\soconnel\Applications\ctags58\ctags.exe'
else
    let Tlist_Ctags_Cmd = '/home/soconnel/bin/ctags/bin/ctags'
    let g:ctrlp_buftag_ctags_bin = '/home/soconnel/bin/ctags/bin/ctags'
endif
" let Tlist_Use_Right_Window = 1

" look for tags files in current directory and two levels up as well
set tags=./tags,./../tags,./../../tags

" configure ctrlp
let g:ctrlp_extensions = ['undo', 'line', 'mixed', 'buffertag']
let g:ctrlp_cmd = 'CtrlPMRU'
let g:ctrlp_switch_buffer = 0

set visualbell
set wildignore+=tags,*.gch

let mapleader = "\<space>"
let maplocalleader = "\\"
nnoremap <leader>el :execute getline('.')<cr>
nnoremap <silent><leader>yl :let @l="- [" . expand('%:t') . ":" . line('.') . "]\n- " . getline('.') . "\n"<cr>
nnoremap <silent><leader>yb :let @+=expand('%:t') . ":" . line('.')<cr>
nnoremap <leader>ev :e $MYVIMRC<cr>
nnoremap <leader>sv :so $MYVIMRC<cr>
nnoremap <leader>w- O<esc>80i-<esc>j^
nnoremap <leader>tl :TlistToggle<cr>
nnoremap <silent><leader>/ :nohlsearch<cr>
nnoremap <leader>msg O::msg_vdebug("shane: 
nnoremap <c-l> 6zl
nnoremap <c-h> 6zh
nnoremap <c-j> 4<c-e>
nnoremap <c-k> 4<c-y>
nnoremap <a-j> 10j
nnoremap <a-k> 10k

" set up quickfix/location list window mappings
let g:toggle_list_no_mappings = 1
nnoremap <silent> <leader>ll :call ToggleLocationList()<CR>
nnoremap <silent> <leader>qq :call ToggleQuickfixList()<CR>
nnoremap <leader>ln :lnewer<cr>
nnoremap <leader>lo :lolder<cr>
nnoremap <leader>qn :cnewer<cr>
nnoremap <leader>qo :colder<cr>

" set up gtags.vim
let g:Gtags_OpenQuickfixWindow = 0
nnoremap <leader>] :GtagsCursor<cr>

" map <leader>f <Plug>(easymotion-f)
map <leader>f <Plug>(easymotion-bd-f)
map <leader>F <Plug>(easymotion-F)
map <leader>t <Plug>(easymotion-t)
map <leader>T <Plug>(easymotion-T)
" map <leader>w <Plug>(easymotion-bd-w)
map <leader>w <Plug>(easymotion-w)
map <leader>W <Plug>(easymotion-W)
map <leader>b <Plug>(easymotion-b)
map <leader>B <Plug>(easymotion-B)
map <leader>j <Plug>(easymotion-j)
map <leader>k <Plug>(easymotion-k)
map <leader>ma <Plug>(easymotion-jumptoanywhere)

" use jk to exit insert/visual mode
inoremap jk <esc>
vnoremap jk <esc>

" always show a list of tags if more than one is found
nnoremap <c-]> g<c-]>

set colorcolumn=81

" fix tab completion to make sense
set wildmode=longest,list,full

" handle quartus.ini files
augroup quartusini
    au!
    au BufNewFile,BufRead quartus.ini setlocal filetype=quartusini
    au FileType quartusini setlocal commentstring="# %s"
augroup END

augroup sdc_files
    autocmd!
    autocmd FileType sdc setlocal commentstring=#\ %s
augroup END

